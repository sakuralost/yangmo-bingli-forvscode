{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\nconst api = {\n  // 获取所有记录\n  getAllRecords: async () => {\n    const response = await axios.get(`${API_BASE_URL}/records`);\n    return response.data;\n  },\n  // 获取单个记录\n  getRecord: async id => {\n    const response = await axios.get(`${API_BASE_URL}/records/${id}`);\n    return response.data;\n  },\n  // 创建新记录\n  createRecord: async record => {\n    const response = await axios.post(`${API_BASE_URL}/records`, record);\n    return response.data;\n  },\n  // 更新记录\n  updateRecord: async (id, record) => {\n    const response = await axios.put(`${API_BASE_URL}/records/${id}`, record);\n    return response.data;\n  },\n  // 上传图片\n  uploadImages: async files => {\n    const formData = new FormData();\n    files.forEach(file => {\n      formData.append('images', file);\n    });\n    const response = await axios.post(`${API_BASE_URL}/upload`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data.urls;\n  },\n  // 搜索记录\n  searchRecords: async query => {\n    const response = await axios.get(`${API_BASE_URL}/search`, {\n      params: {\n        query\n      }\n    });\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","getAllRecords","response","get","data","getRecord","id","createRecord","record","post","updateRecord","put","uploadImages","files","formData","FormData","forEach","file","append","headers","urls","searchRecords","query","params"],"sources":["F:/Users/迷失小爷/文档/Aicoder/vscode/bingli/medical-record-assistant/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { Record } from '../models/Record';\n\nconst API_BASE_URL = 'http://localhost:5000/api';\n\nconst api = {\n    // 获取所有记录\n    getAllRecords: async (): Promise<Record[]> => {\n        const response = await axios.get(`${API_BASE_URL}/records`);\n        return response.data;\n    },\n\n    // 获取单个记录\n    getRecord: async (id: string): Promise<Record> => {\n        const response = await axios.get(`${API_BASE_URL}/records/${id}`);\n        return response.data;\n    },\n\n    // 创建新记录\n    createRecord: async (record: Partial<Record>): Promise<Record> => {\n        const response = await axios.post(`${API_BASE_URL}/records`, record);\n        return response.data;\n    },\n\n    // 更新记录\n    updateRecord: async (id: string, record: Partial<Record>): Promise<Record> => {\n        const response = await axios.put(`${API_BASE_URL}/records/${id}`, record);\n        return response.data;\n    },\n\n    // 上传图片\n    uploadImages: async (files: File[]): Promise<string[]> => {\n        const formData = new FormData();\n        files.forEach(file => {\n            formData.append('images', file);\n        });\n\n        const response = await axios.post(`${API_BASE_URL}/upload`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        });\n\n        return response.data.urls;\n    },\n\n    // 搜索记录\n    searchRecords: async (query: string): Promise<Record[]> => {\n        const response = await axios.get(`${API_BASE_URL}/search`, {\n            params: { query }\n        });\n        return response.data;\n    }\n};\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,GAAG,GAAG;EACR;EACAC,aAAa,EAAE,MAAAA,CAAA,KAA+B;IAC1C,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,YAAY,UAAU,CAAC;IAC3D,OAAOG,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED;EACAC,SAAS,EAAE,MAAOC,EAAU,IAAsB;IAC9C,MAAMJ,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,YAAY,YAAYO,EAAE,EAAE,CAAC;IACjE,OAAOJ,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED;EACAG,YAAY,EAAE,MAAOC,MAAuB,IAAsB;IAC9D,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACW,IAAI,CAAC,GAAGV,YAAY,UAAU,EAAES,MAAM,CAAC;IACpE,OAAON,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED;EACAM,YAAY,EAAE,MAAAA,CAAOJ,EAAU,EAAEE,MAAuB,KAAsB;IAC1E,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACa,GAAG,CAAC,GAAGZ,YAAY,YAAYO,EAAE,EAAE,EAAEE,MAAM,CAAC;IACzE,OAAON,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED;EACAQ,YAAY,EAAE,MAAOC,KAAa,IAAwB;IACtD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BF,KAAK,CAACG,OAAO,CAACC,IAAI,IAAI;MAClBH,QAAQ,CAACI,MAAM,CAAC,QAAQ,EAAED,IAAI,CAAC;IACnC,CAAC,CAAC;IAEF,MAAMf,QAAQ,GAAG,MAAMJ,KAAK,CAACW,IAAI,CAAC,GAAGV,YAAY,SAAS,EAAEe,QAAQ,EAAE;MAClEK,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEF,OAAOjB,QAAQ,CAACE,IAAI,CAACgB,IAAI;EAC7B,CAAC;EAED;EACAC,aAAa,EAAE,MAAOC,KAAa,IAAwB;IACvD,MAAMpB,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,YAAY,SAAS,EAAE;MACvDwB,MAAM,EAAE;QAAED;MAAM;IACpB,CAAC,CAAC;IACF,OAAOpB,QAAQ,CAACE,IAAI;EACxB;AACJ,CAAC;AAED,eAAeJ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}