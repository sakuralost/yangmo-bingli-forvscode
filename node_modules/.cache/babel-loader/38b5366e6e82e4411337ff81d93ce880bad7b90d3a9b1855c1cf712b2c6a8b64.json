{"ast":null,"code":"var _jsxFileName = \"F:\\\\Users\\\\\\u8FF7\\u5931\\u5C0F\\u7237\\\\\\u6587\\u6863\\\\Aicoder\\\\vscode\\\\bingli\\\\medical-record-assistant\\\\src\\\\components\\\\RecordList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// 定义病例数据的类型\n\n// 修改 RecordList 组件以接收 props\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecordList = ({\n  records\n}) => {\n  _s();\n  // 定义状态变量 searchTerm，用于存储搜索关键字\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // 根据搜索关键字过滤病例数据\n  const filteredRecords = records.filter(record => record.caseName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n  // 根据病例名称过滤\n  record.symptom.toLowerCase().includes(searchTerm.toLowerCase()) // 根据病症过滤\n  );\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u641C\\u7D22\\u75C5\\u4F8B...\" // 提示用户输入搜索内容\n      ,\n      value: searchTerm // 绑定输入框的值到 searchTerm 状态\n      ,\n      onChange: e => setSearchTerm(e.target.value) // 更新搜索关键字状态\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredRecords.map(record => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: record.caseName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u75C5\\u75C7: \", record.symptom]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u8054\\u7CFB\\u65B9\\u5F0F: \", record.contact]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u6027\\u522B: \", record.gender]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u5E74\\u9F84: \", record.age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u6700\\u540E\\u8BCA\\u65AD\\u65F6\\u95F4: \", record.lastDiagnosisDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), \" \"]\n      }, record.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(RecordList, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n_c = RecordList;\nexport default RecordList;\nvar _c;\n$RefreshReg$(_c, \"RecordList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RecordList","records","_s","searchTerm","setSearchTerm","filteredRecords","filter","record","caseName","toLowerCase","includes","symptom","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","contact","gender","age","lastDiagnosisDate","id","_c","$RefreshReg$"],"sources":["F:/Users/迷失小爷/文档/Aicoder/vscode/bingli/medical-record-assistant/src/components/RecordList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchRecords } from '../services/api';\n\n// 定义病例数据的类型\ninterface Record {\n    id: string;\n    caseName: string;\n    symptom: string;\n    contact: string;\n    gender: string;\n    age: number;\n    lastDiagnosisDate: string;\n}\n\n// 修改 RecordList 组件以接收 props\ninterface RecordListProps {\n    records: Record[];\n}\n\nconst RecordList: React.FC<RecordListProps> = ({ records }) => {\n    // 定义状态变量 searchTerm，用于存储搜索关键字\n    const [searchTerm, setSearchTerm] = useState('');\n\n    // 根据搜索关键字过滤病例数据\n    const filteredRecords = records.filter(record =>\n        record.caseName.toLowerCase().includes(searchTerm.toLowerCase()) || // 根据病例名称过滤\n        record.symptom.toLowerCase().includes(searchTerm.toLowerCase()) // 根据病症过滤\n    );\n\n    return (\n        <div>\n            {/* 搜索输入框，用于输入搜索关键字 */}\n            <input\n                type=\"text\"\n                placeholder=\"搜索病例...\" // 提示用户输入搜索内容\n                value={searchTerm} // 绑定输入框的值到 searchTerm 状态\n                onChange={(e) => setSearchTerm(e.target.value)} // 更新搜索关键字状态\n            />\n            {/* 显示过滤后的病例列表 */}\n            <ul>\n                {filteredRecords.map(record => (\n                    <li key={record.id}> {/* 使用病例的唯一 ID 作为列表项的 key */}\n                        <h3>{record.caseName}</h3> {/* 显示病例名称 */}\n                        <p>病症: {record.symptom}</p> {/* 显示病症 */}\n                        <p>联系方式: {record.contact}</p> {/* 显示联系方式 */}\n                        <p>性别: {record.gender}</p> {/* 显示性别 */}\n                        <p>年龄: {record.age}</p> {/* 显示年龄 */}\n                        <p>最后诊断时间: {record.lastDiagnosisDate}</p> {/* 显示最后诊断时间 */}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default RecordList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;;AAGlD;;AAWA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKA,MAAMC,UAAqC,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC3D;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMQ,eAAe,GAAGJ,OAAO,CAACK,MAAM,CAACC,MAAM,IACzCA,MAAM,CAACC,QAAQ,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,UAAU,CAACM,WAAW,CAAC,CAAC,CAAC;EAAI;EACpEF,MAAM,CAACI,OAAO,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,UAAU,CAACM,WAAW,CAAC,CAAC,CAAC,CAAC;EACpE,CAAC;EAED,oBACIV,OAAA;IAAAa,QAAA,gBAEIb,OAAA;MACIc,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,6BAAS,CAAC;MAAA;MACtBC,KAAK,EAAEZ,UAAW,CAAC;MAAA;MACnBa,QAAQ,EAAGC,CAAC,IAAKb,aAAa,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAC;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eAEFvB,OAAA;MAAAa,QAAA,EACKP,eAAe,CAACkB,GAAG,CAAChB,MAAM,iBACvBR,OAAA;QAAAa,QAAA,GAAoB,GAAC,eACjBb,OAAA;UAAAa,QAAA,EAAKL,MAAM,CAACC;QAAQ;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,KAAC,eAC3BvB,OAAA;UAAAa,QAAA,GAAG,gBAAI,EAACL,MAAM,CAACI,OAAO;QAAA;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,KAAC,eAC5BvB,OAAA;UAAAa,QAAA,GAAG,4BAAM,EAACL,MAAM,CAACiB,OAAO;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,KAAC,eAC9BvB,OAAA;UAAAa,QAAA,GAAG,gBAAI,EAACL,MAAM,CAACkB,MAAM;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,KAAC,eAC3BvB,OAAA;UAAAa,QAAA,GAAG,gBAAI,EAACL,MAAM,CAACmB,GAAG;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,KAAC,eACxBvB,OAAA;UAAAa,QAAA,GAAG,wCAAQ,EAACL,MAAM,CAACoB,iBAAiB;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,KAAC;MAAA,GANrCf,MAAM,CAACqB,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOd,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACpB,EAAA,CAlCIF,UAAqC;AAAA6B,EAAA,GAArC7B,UAAqC;AAoC3C,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}