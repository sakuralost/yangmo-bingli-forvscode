{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\nexport const fetchRecords = async () => {\n  const response = await axios.get(`${API_BASE_URL}/records`);\n  return response.data;\n};\nexport const fetchRecordById = async id => {\n  const response = await axios.get(`${API_BASE_URL}/records/${id}`);\n  return response.data;\n};\nexport const createRecord = async record => {\n  const response = await axios.post(`${API_BASE_URL}/records`, record);\n  return response.data;\n};\nexport const updateRecord = async (id, record) => {\n  const response = await axios.put(`${API_BASE_URL}/records/${id}`, record);\n  return response.data;\n};\nexport const uploadImages = async files => {\n  const formData = new FormData();\n  files.forEach(file => {\n    formData.append('images', file);\n  });\n  const response = await axios.post(`${API_BASE_URL}/upload`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  return response.data.urls;\n};\nexport const searchRecords = async query => {\n  const response = await axios.get(`${API_BASE_URL}/search`, {\n    params: {\n      query\n    }\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","API_BASE_URL","fetchRecords","response","get","data","fetchRecordById","id","createRecord","record","post","updateRecord","put","uploadImages","files","formData","FormData","forEach","file","append","headers","urls","searchRecords","query","params"],"sources":["F:/Users/迷失小爷/文档/Aicoder/vscode/bingli/medical-record-assistant/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { Record } from '../types';\n\nconst API_BASE_URL = 'http://localhost:5000/api';\n\nexport const fetchRecords = async (): Promise<Record[]> => {\n    const response = await axios.get(`${API_BASE_URL}/records`);\n    return response.data;\n};\n\nexport const fetchRecordById = async (id: string): Promise<Record> => {\n    const response = await axios.get(`${API_BASE_URL}/records/${id}`);\n    return response.data;\n};\n\nexport const createRecord = async (record: Partial<Record>): Promise<Record> => {\n    const response = await axios.post(`${API_BASE_URL}/records`, record);\n    return response.data;\n};\n\nexport const updateRecord = async (id: string, record: Partial<Record>): Promise<Record> => {\n    const response = await axios.put(`${API_BASE_URL}/records/${id}`, record);\n    return response.data;\n};\n\nexport const uploadImages = async (files: File[]): Promise<string[]> => {\n    const formData = new FormData();\n    files.forEach(file => {\n        formData.append('images', file);\n    });\n\n    const response = await axios.post(`${API_BASE_URL}/upload`, formData, {\n        headers: {\n            'Content-Type': 'multipart/form-data',\n        },\n    });\n\n    return response.data.urls;\n};\n\nexport const searchRecords = async (query: string): Promise<Record[]> => {\n    const response = await axios.get(`${API_BASE_URL}/search`, {\n        params: { query }\n    });\n    return response.data;\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAA+B;EACvD,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,UAAU,CAAC;EAC3D,OAAOE,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMC,eAAe,GAAG,MAAOC,EAAU,IAAsB;EAClE,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,YAAYM,EAAE,EAAE,CAAC;EACjE,OAAOJ,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMG,YAAY,GAAG,MAAOC,MAAuB,IAAsB;EAC5E,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACU,IAAI,CAAC,GAAGT,YAAY,UAAU,EAAEQ,MAAM,CAAC;EACpE,OAAON,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMM,YAAY,GAAG,MAAAA,CAAOJ,EAAU,EAAEE,MAAuB,KAAsB;EACxF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACY,GAAG,CAAC,GAAGX,YAAY,YAAYM,EAAE,EAAE,EAAEE,MAAM,CAAC;EACzE,OAAON,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMQ,YAAY,GAAG,MAAOC,KAAa,IAAwB;EACpE,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BF,KAAK,CAACG,OAAO,CAACC,IAAI,IAAI;IAClBH,QAAQ,CAACI,MAAM,CAAC,QAAQ,EAAED,IAAI,CAAC;EACnC,CAAC,CAAC;EAEF,MAAMf,QAAQ,GAAG,MAAMH,KAAK,CAACU,IAAI,CAAC,GAAGT,YAAY,SAAS,EAAEc,QAAQ,EAAE;IAClEK,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC;EAEF,OAAOjB,QAAQ,CAACE,IAAI,CAACgB,IAAI;AAC7B,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAOC,KAAa,IAAwB;EACrE,MAAMpB,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,SAAS,EAAE;IACvDuB,MAAM,EAAE;MAAED;IAAM;EACpB,CAAC,CAAC;EACF,OAAOpB,QAAQ,CAACE,IAAI;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}